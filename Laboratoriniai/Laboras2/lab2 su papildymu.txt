/*
 *Skaičiuotuvas atliekantis pagrindinius matematinius veiksmus su vartotojo įvestais dviem skaitmenimis
 *
 * Laboratorinis darbas nr.: 2 version 1
 *
 * Copyright (c) by Me
 *
 */

import java.util.Scanner;

public class Main {

    public static void main(String[] args) {
        double rezultatas;
        double[] ivestiSkaiciai;
        boolean testi = true;

        while (testi) {
            Scanner S = new Scanner(System.in);
            System.out.println("Įveskite kokį veiksmą norite atlikti: \"*\" jei daugybą; \"/\" jei dalybą; \"+\" jei sudėtį ir \"-\" jei atimtį:");
            String veiksmas = S.next(); //Pasirenkama operacija

            switch (veiksmas) {
                case "*":
                    /*Vartotojo įvesti skaičiai funkcijoje "ivestiSkaicius", išsaugomi main klasės masyve "ivestiSkaiciai"*/
                    ivestiSkaiciai = ivestiSkaicius();
                    dauginti(ivestiSkaiciai[0], ivestiSkaiciai[1]); //Funkcijai "dauginti" perduodami skaičiai iš masyvo
                    /*Kreipiamasi į funkciją "arTesti" kurioje vartotojas pasirenka ar nori tęsti darbą. Jo pasirinkimas išsaugomas kintamąjame testi*/
                    testi = arTesti();
                    break;
                case "/":
                    dalinti();
                    testi = arTesti();
                    break;
                case "+":
                    ivestiSkaiciai = ivestiSkaicius();

                    /*Funkcijai "sudeti" perduodami skaičiai iš masyvo. Gauta suma išsaugoma kintamąjame "rezultatas"*/
                    rezultatas = sudeti(ivestiSkaiciai[0], ivestiSkaiciai[1]);
                    System.out.println(ivestiSkaiciai[0] + " - " + ivestiSkaiciai[1] + " = " + rezultatas);
                    testi = arTesti();
                    break;
                case "-":
                    /*Šiame masyve išsaugomi trys skaitmenys iš masyvo, gauto funkcijoje atimti*/
                    double[] atimtiesSkaiciai = atimti();
                    System.out.println(atimtiesSkaiciai[0] + " - " + atimtiesSkaiciai[1] + " = " + atimtiesSkaiciai[2]);
                    testi = arTesti();
                    break;
                case "?":
                    ivestiSkaiciai = ivestiSkaicius();
                    for (int i = 9; i < 100; i++) {
                        rezultatas = skaiciuotiLyginti(ivestiSkaiciai[0], ivestiSkaiciai[1], i); //Skaičiuojamas rezultatas
                        if (rezultatas < 0.25) {
                            System.out.println("(" + ivestiSkaiciai[1] + " + " + ivestiSkaiciai[0] + ")" + "/" + i + " - " + "(" + ivestiSkaiciai[0] + " - " + ivestiSkaiciai[1] + ")" + " = " + rezultatas + " < 0.25");
                        } else if (rezultatas == 0.25) {
                            System.out.println("(" + ivestiSkaiciai[1] + " + " + ivestiSkaiciai[0] + ")" + "/" + i + " - " + "(" + ivestiSkaiciai[0] + " - " + ivestiSkaiciai[1] + ")" + " = " + rezultatas + " == 0.25");
                        } else {
                            System.out.println("(" + ivestiSkaiciai[1] + " + " + ivestiSkaiciai[0] + ")" + "/" + i + " - " + "(" + ivestiSkaiciai[0] + " - " + ivestiSkaiciai[1] + ")" + " = " + rezultatas + " > 0.25");
                        }
                    }
                    testi = arTesti();
                    break;
                default://Jei įvedamas netinkamas operacijos ženklas, išvedamas pranešimas, jog tai negalima operacija ir klausiama ar tęsti toliau
                    System.out.println("Operacija negalima");
                    System.out.println("Jei norite tęsti, spauskite \"t\", jei ne - spauskite \"n\"");
                    String test = S.next();
                    /*Kreipiamasi jau į kitą funkciją "arTesti", kuriai perduodamas vartotojo pasirinkimas*/
                    testi = arTesti(test);
                    break;
            }
        }
    }

    /**
     * Ši funkcija apskaičiuoja vartotojo įvestus du skaičius pagal nurodytą formulę.
     *
     * @param skaicius1 vartotojo įvestas pirmas skaitmuo
     * @param skaicius2 vartotojo įvestas antras skaitmuo
     * @param i iš main metodo naudojamo for ciklo ateinanti reikšmė nuo 9 iki 99 imtinai
     *
     * @return rezultatas apskaičiavus pagal formulę
     */
    static double skaiciuotiLyginti(double skaicius1, double skaicius2, int i) {
        return  (skaicius2 + skaicius1) / i - (skaicius1 - skaicius2);
        }

    /**
     * Ši funkcija paprašo vartotojo įvesti du skaičius, su kuriais bus atliekamos operacijos.
     * Šie skaičiai išsaugomi masyve, kur pirmoji masyvo reikšmė yra pirmasis įvestas skaičius, o antroji - antrasis skaičius
     *
     * @return masyvas su vartotojo dviem įvestais skaičiais
     */
    static double[] ivestiSkaicius() {
        double[] skaiciai = new double[2]; //Sukuriamas masyvas, kuriame bus saugomi įvesti skaičiai
        double skaicius1, skaicius2;

        System.out.println("Įveskite pirmą skaičių:");
        Scanner S = new Scanner(System.in);
        skaicius1 = S.nextInt(); //Įvedamas pirmas skaičius
        skaiciai[0] = skaicius1; //Masyve išssaugomas pirmasis įvestas skaičius
        System.out.println("Įveskite antrą skaičių:");
        skaicius2 = S.nextInt(); //Įvedamas antras skaičius
        skaiciai[1] = skaicius2; //Masyve išssaugomas antrasis įvestas skaičius
        return skaiciai;
    }

    /**
     * Ši funkcija sudaugina vartotojo įvestus skaičius ir atspausdina rezultatą ekrane.
     *
     * @param sk1, pirmasis vartotojo įvestas skaitmuo
     * @param sk2  antrasis vartotojo įvestas skaitmuo
     */
    static void dauginti(double sk1, double sk2) {
        double rezultatas = sk1 * sk2;
        System.out.println(sk1 + " * " + sk2 + " = " + rezultatas);
    }

    /**
     * Ši funkcija padalina vartotojo įvestus skaičius ir atspausdina rezultatą ekrane.
     * Vartotojas skaičius įveda šios funkcijos viduje, dėl iškviečiamos funkcijos "ivestiSkaicius".
     * Todėl visas dalybos veiksmas ir rezultato spausdinimas atliekamas šioje funkcijoje "dalinti".
     */
    static void dalinti() {
        double dalybosRezultatas;

        double[] skaiciai = ivestiSkaicius();
        if (skaiciai[1] == 0) { //Tikrinama ar antrasis įvestas skaičius yra nulis
            System.out.println("Dalyba iš nulio negalima");
        } else {
            dalybosRezultatas = skaiciai[0] / skaiciai[1];
            System.out.println(skaiciai[0] + " / " + skaiciai[1] + " = " + dalybosRezultatas);
        }
    }

    /**
     * Šioje funkcijoje apskaičiuojama vartotojo įvestų skaičių suma
     *
     * @param sk1 pirmasis vartotojo įvestas skaitmuo
     * @param sk2 antrasis vartotojo įvestas skaitmuo
     * @return funkcija grąžina dviejų skaičių sumą
     */
    static double sudeti(double sk1, double sk2) {
        return sk1 + sk2;
    }

    /**
     * Šioje funkcijoje "atimti", vartotojas paprašomas įvesti du skaičius, naudojant "ivestiSkaicius" funkciją.
     * Tada paskaičiuojamas atimties rezultatas. Ir visi šie trys skaitmenys: vartotojo įvesti du skaičiai ir jų rezultatas,
     * išsaugomi masyve "atimtiesSkaiciai", kur pirmasis masyvo elementas yra tai - kokį pirmą skaičių įvedė vartotojas,
     * antrasis elementas - antras vartotojo įvestas skaitmuo, trečiasis elementas - vartotojo įvestų skaičių atimties rezultatas.
     *
     * @return funkcija grąžina masyvą su trimis elementais
     */
    static double[] atimti() {
        /*Sukuriamas masyvas, kuriame bus saugomi vartotojo įvesti skaičiai ir šių skaičių atimties rezultatas*/
        double[] atimtiesSkaiciai = new double[3];
        double atimtiesRezultatas;
        double[] vartotojoSkaiciai = ivestiSkaicius();

        atimtiesSkaiciai[0] = vartotojoSkaiciai[0]; //Vartotojo įvestas pirmas skaitmuo išsaugomas kaip pirmas masyvo elementas
        atimtiesSkaiciai[1] = vartotojoSkaiciai[1]; //Vartotojo įvestas antras skaitmuo išsaugomas kaip antras masyvo elementas
        atimtiesRezultatas = vartotojoSkaiciai[0] - vartotojoSkaiciai[1];
        atimtiesSkaiciai[2] = atimtiesRezultatas; //Rezultatas išsaugomas kaip trečias masyvo elementas
        return atimtiesSkaiciai;
    }

    /**
     * Ši funkcija paklausia vartotojo ar jis nori tęsti, po atlikto veiksmo.
     * Jei vartotojas įveda kažką kito nei "t" ar "n" jis dar kartą paprašomas įrašyti pasirinkimą
     *
     * @return vartotojo pasirinkimas, kuris paskui priskiriamas kintamajam "testi" (boolean) esančiam main metode
     */
    public static boolean arTesti() {
        String test = "";
        boolean pasirinkimas = false;
        boolean vidinisPasirinkimas = true;
        System.out.println("Jei norite tęsti, spauskite \"t\", jei ne - spauskite \"n\"");

        while (vidinisPasirinkimas) {
            Scanner S = new Scanner(System.in);
            test = S.next();
            if (test.equals("t")) {
                vidinisPasirinkimas = false;
                pasirinkimas = true;
            } else if (test.equals("n")) {
                vidinisPasirinkimas = false;
                pasirinkimas = false;
                System.out.println("Darbas baigtas.");
            } else {
                vidinisPasirinkimas = true;
                System.out.println("Įvestas neteisingas pasirinkimas, veskite tik \"t\" arba \"n\"");
            }
        }
        return pasirinkimas;
    }

    /**
     * Ši funkcija pagal vartotojo pasirinkimą: užbaigia arba tęsia darbą.
     * Vartotojui main metode netinkamai įvedus matematinio veiksmo ženklą, jis paprašomas pasirinkti ar jis nori tęsti darbą.
     * Šis jo atsakymas išsaugomas į String kintamąjį, kuris perduodamas šiai funkcijai.
     * Pagal perduoto kintamojo reikšmę ši funkcija priskiria ir grąžina true/false reikšmę pagrindiniam ciklui while.
     * Nuo gautos reikšmės priklauso ar pagrindinis ciklas toliau tęs darbą ir vartotojas toliau galės atlikti matematinius veiksmus,
     * ar darbas bus užbaigtas.
     *
     * @param testiDarba vartotojo pasirinkimas (String)
     * @return vartotojo pasirinkimas, kuris paskui priskiriamas kintamajam "testi" (boolean) esančiam main metode
     */
    public static boolean arTesti(String testiDarba) {
        boolean tesimas;
        if (testiDarba.equals("n")) {
            tesimas = false;
            System.out.println("Darbas baigtas.");
        } else {
            tesimas = true;
        }
        return tesimas;
    }

}
